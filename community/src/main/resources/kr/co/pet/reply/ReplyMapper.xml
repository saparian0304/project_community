<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pet.reply.ReplyMapper">
	
	<insert id = "insert" parameterType="kr.co.pet.reply.ReplyVO">
		INSERT INTO reply (
			board_no, content, member_no,  regdate, update_date, isdelete, ono
			) VALUES (
				#{board_no}, #{content}, #{member_no}, NOW(), NOW(), 0 , 0
			)
			
			<selectKey keyProperty="reply_no" resultType="int" order="AFTER">
				SELECT LAST_INSERT_ID() 
			</selectKey>		
	</insert>
	
	<update id="gnoUpdate">
		UPDATE reply SET gno = #{gno} WHERE reply_no=#{gno} 
	</update>
	

	
	<insert id = "reply" parameterType="kr.co.pet.reply.ReplyVO">
		INSERT INTO reply (
			board_no, content, member_no,  regdate, update_date, isdelete, gno, ono
			) VALUES (
				#{board_no}, #{content}, #{member_no}, NOW(), NOW(), 0, #{gno}, #{ono}
			)		
	</insert>
	
	<select id="rcount" parameterType="kr.co.pet.reply.ReplyVO" resultType="java.lang.Integer"> <!-- 차단 사람 글 count 안하게 WHERE 추가-->
		SELECT COUNT(gno) FROM reply
		WHERE gno = #{gno} AND ono !=0 AND isdelete = 0 AND reply.member_no not in (SELECT you_no FROM follow WHERE i_no = #{member_no} AND relation = 1)
		
	</select>
	
	<select id="replyList" parameterType="kr.co.pet.reply.ReplyVO" resultType="kr.co.pet.reply.ReplyVO"> <!-- 차단 사람 글 안보이게 WHERE 추가-->
		SELECT *,				
			(SELECT nickname FROM member WHERE member_no=rp.member_no) AS member_nickname
			,(SELECT COUNT(*) FROM reply WHERE reply_no = #{gno} AND gno = #{gno} ) AS reply_count
			,(SELECT COUNT(*) FROM recommend rec 
				WHERE board_no = #{board_no} AND rec.reply_no = rp.reply_no) AS recommendCount
			<if test="member_no != 0">
				,(SELECT relation FROM follow WHERE follow.i_no=#{member_no} AND follow.you_no = rp.member_no AND follow.relation != 1) AS relation
				,(SELECT count(*) FROM recommend reco
				WHERE member_no = #{member_no} AND board_no = #{board_no} AND reco.reply_no = rp.reply_no) AS recommended		
			</if>
		FROM reply rp
		WHERE gno = #{gno}   AND ono != 0 AND rp.member_no not in (SELECT you_no FROM follow WHERE i_no = #{member_no} AND relation = 1)
		ORDER BY regdate ASC
		LIMIT ${startIdx}, ${pageRow}		
	</select>
	
	
	
	<select id="count" parameterType="kr.co.pet.reply.ReplyVO" resultType="java.lang.Integer"> <!-- 차단 사람 글 count 안하게 WHERE 추가-->
		SELECT COUNT(*) FROM reply
		WHERE board_no = #{board_no} AND ono = 0 AND reply.member_no not in (SELECT you_no FROM follow WHERE i_no = #{member_no} AND relation = 1)
	</select>
	
<!-- 	<select id="list" parameterType="kr.co.pet.reply.ReplyVO" resultType="kr.co.pet.reply.ReplyVO">
		SELECT *,
			(SELECT board_no  FROM board WHERE board_no=reply.board_no) AS list_no,
			(SELECT nickname FROM member WHERE member_no=reply.member_no) AS member_nickname			
			FROM reply		
		WHERE board_no = #{board_no} AND ono = 0
		
		ORDER BY regdate ASC
		LIMIT ${startIdx}, ${pageRow}		
	</select>  -->
	
	<select id="list" parameterType="kr.co.pet.reply.ReplyVO" resultType="kr.co.pet.reply.ReplyVO"> <!-- 차단 사람 글 안보이게 WHERE 추가-->
		SELECT *,
			(SELECT board_no  FROM board WHERE board_no=rp.board_no) AS list_no
			,(SELECT nickname FROM member WHERE member_no=rp.member_no) AS member_nickname
			,(SELECT COUNT(*) FROM reply re WHERE re.gno = rp.gno AND ono != 0 AND isdelete = 0) AS reply_count
			,(SELECT COUNT(*) FROM recommend rec 
			WHERE board_no = #{board_no} AND rec.reply_no = rp.reply_no) AS recommendCount
		<if test="member_no != null">
		    ,(SELECT relation FROM follow WHERE follow.i_no=#{member_no} AND follow.you_no = rp.member_no AND follow.relation != 1) AS relation
		    ,(SELECT count(*) FROM recommend reco
			WHERE member_no = #{member_no} AND board_no = #{board_no} AND reco.reply_no = rp.reply_no) AS recommended		
		</if>
		FROM reply rp 
		WHERE board_no = #{board_no} AND ono = 0 AND rp.member_no not in (SELECT you_no FROM follow WHERE i_no = #{member_no} AND relation = 1)		
		ORDER BY regdate ASC
		LIMIT ${startIdx}, ${pageRow}		
	</select>
	
	<update id="update">
		UPDATE reply SET isdelete = 1 WHERE reply_no = #{reply_no}
	</update>
	
	<update id="replyEdit">
		UPDATE reply SET 
		content = #{content},
		update_date = NOW()
		WHERE reply_no = #{reply_no} AND member_no = #{member_no}
	</update>	
</mapper>